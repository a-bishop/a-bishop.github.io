{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/docker-debugging","result":{"data":{"post":{"__typename":"MdxPost","slug":"/docker-debugging","title":"Docker Debugging","date":"20.09.2020","tags":[{"name":"Docker","slug":"docker"},{"name":"Debugging","slug":"debugging"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker Debugging\",\n  \"date\": \"2020-09-20T00:00:00.000Z\",\n  \"tags\": [\"Docker\", \"Debugging\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I recently went through the process of troubleshooting a docker container\\nrebuild and thought I would share some debugging approaches I\\nlearned along the way. But first off, I should give some background on my\\nspecific circumstance.\"), mdx(\"p\", null, \"For the development environments at Stocksy we all work with docker containers,\\nwhich contain a subset of the data that exists on production (with scrubbed and\\nanonymized user information, of course). By pulling fresh docker images from\\nAmazon ECR, spinning up new containers and applying any recent schema changes,\\nwe can all guarantee a shared base state of the application across developer\\nmachines.\"), mdx(\"p\", null, \"This technique works well until a significant database schema change or data\\nbackfill is required. For those circumstances it makes more sense to backfill\\nthe data, and then rebuild and push a new docker image.\"), mdx(\"p\", null, \"I had been working on one of these significant changes on my local machine, one\\nthat involved running a script that took nearly four hours to complete and\\nupdated millions of database records. So I followed the documentation for\\nrebuilding a new container \\u2014 export the database tables as .sql files, create a\\nnew base image from the Dockerfile, create a new container from this image,\\nimport the data, commit the container to a new image, upload to ECR \\u2014 and I was\\ndone! A shiny, fresh new mysql container for all the devs to download.\"), mdx(\"p\", null, \"...Wait, hold on a sec. Running our docker-compose.yml to start up the new\\ncontainer, I saw that it kept crashing.\"), mdx(\"p\", null, \"things to talk about:\"), mdx(\"p\", null, \"Dockerfile docker-compose file\"), mdx(\"p\", null, \"docker run docker build docker commit docker push\"), mdx(\"p\", null, \"docker exec\"), mdx(\"p\", null, \"overriding command / entrypoint running interactive shell\"), mdx(\"p\", null, \"docker logs docker events&\"), mdx(\"p\", null, \"docker pause docker unpause\"), mdx(\"p\", null, \"docker top docker inspect\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/@betz.mark/ten-tips-for-debugging-docker-containers-cde4da841a1d\"\n  }), \"https://medium.com/@betz.mark/ten-tips-for-debugging-docker-containers-cde4da841a1d\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I recently went through the process of troubleshooting a docker container\nrebuild and thought I would share some debugging approaches Iâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/docker-debugging","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["1654422363","3090400250","3090400250"]}