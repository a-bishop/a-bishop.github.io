{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/understanding-the-field-and-elt-functions-in-my-sql","result":{"data":{"post":{"__typename":"MdxPost","slug":"/understanding-the-field-and-elt-functions-in-my-sql","title":"Understanding the field() and elt() Functions in MySQL","date":"21.02.2021","tags":[{"name":"MySQL","slug":"my-sql"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Understanding the field() and elt() Functions in MySQL\",\n  \"date\": \"2021-02-21T00:00:00.000Z\",\n  \"tags\": [\"MySQL\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"What are the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"field()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elt()\"), \" functions used for in MySQL? I recently came across them when implementing a voting system and found them pretty useful for doing calculations in queries with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"group by\"), \" clauses.\"), mdx(\"p\", null, \"Let's start with the definitions from the docs:\"), mdx(\"h5\", null, \"FIELD(str,str1,str2,str3,...)\"), mdx(\"p\", null, \"FIELD() returns the index (position) of str in the str1, str2, str3, ... list. Returns 0 if str is not found.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sql\"\n  }), \"SELECT field('orange', 'banana', 'apple', 'orange');\\n-- Returns 3\\n\")), mdx(\"h5\", null, \"ELT(N,str1,str2,str3,...)\"), mdx(\"p\", null, \"ELT() returns the Nth element of the list of strings: str1 if N = 1, str2 if N = 2, and so on. ELT() is the complement of FIELD().\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sql\"\n  }), \"SELECT elt(3, 'banana', 'apple', 'orange');\\n-- Returns 'orange'\\n\")), mdx(\"p\", null, \"OK, now that we understand the basics let's look at a situation where we might want to reach for these functions.\"), mdx(\"p\", null, \"Assume we have a database table \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user_membership\"), \" that records users and the memberships they belong to within an organization. A user can have multiple memberships (ie. there is a one-to-many relationship between users and memberships). Here are a few example rows from our contrived database table:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"id\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"userId\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"membership\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"1\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"101\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"board\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"2\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"101\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"staff\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"3\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"102\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"staff\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"4\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"102\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"general\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"103\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"general\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"6\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"104\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"general\")))), mdx(\"p\", null, \"We can see that user 101 has 'board' and 'staff' memberships, user 102 has 'staff' and 'general' memberships, and user 103 and 104 have just 'general' memberships.\"), mdx(\"p\", null, \"Now imagine we are given a business rule that requires us to retrieve the number of users by membership, but only counting users once by their priority membership ('board' > 'staff' > 'general'). We can achieve this by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"field()\"), \" function and a subquery.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sql\"\n  }), \"SELECT userId, membership AS priorityMembership FROM user_membership\\nWHERE field(membership, \\\"board\\\", \\\"staff\\\", \\\"general\\\") = (\\n  SELECT min(field(membership, \\\"board\\\", \\\"staff\\\", \\\"general\\\"))\\n  FROM user_membership t\\n  WHERE t.userId = user_membership.userId\\n)\\nGROUP BY userId;\\n\")), mdx(\"p\", null, \"However, there is a better and more perfomant way to make this same calculation using, you guessed it, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elt()\"), \". It allows us to convert the index value back to the corresponding string at the index number specified in the list of arguments.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sql\"\n  }), \"SELECT\\n    userId,\\n    elt(min(field(membership, \\\"board\\\", \\\"staff\\\", \\\"general\\\")), \\\"board\\\", \\\"staff\\\", \\\"general\\\") AS priorityMembership,\\n    min(field(membership, \\\"board\\\", \\\"staff\\\", \\\"general\\\")) AS rank\\nFROM user_membership\\nGROUP BY userId;\\n\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"userId\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"priorityMembership\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"rank\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"101\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"board\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"102\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"staff\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"103\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"general\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"3\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"104\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"general\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"3\")))), mdx(\"p\", null, \"From there, we can group on priority membership to get the counts.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sql\"\n  }), \"SELECT priorityMembership, count(userId) as userCount\\nFROM\\n  (SELECT\\n      userId,\\n      elt(min(field(userGroup, \\\"board\\\", \\\"staff\\\", \\\"general\\\")), \\\"board\\\", \\\"staff\\\", \\\"general\\\") AS priorityMembership,\\n      min(field(userGroup, \\\"board\\\", \\\"staff\\\", \\\"general\\\")) AS rank\\n  FROM user_membership\\n  GROUP BY userId)\\nGROUP BY priorityMembership;\\n\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"priorityMembership\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"userCount\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"board\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"staff\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"general\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"2\")))), mdx(\"p\", null, \"A couple of gotchas to note about the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"field()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elt()\"), \" functions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"field()\"), \" returns 0 if the first argument is NULL because NULL fails equality comparison with any value.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"elt()\"), \" returns NULL if the first argument is less than 1 or greater than the number of string arguments.\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"What are the  field()  and  elt()  functions used for in MySQL? I recently came across them when implementing a voting system and found them…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/understanding-the-field-and-elt-functions-in-my-sql","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["1654422363","3090400250","3090400250"]}