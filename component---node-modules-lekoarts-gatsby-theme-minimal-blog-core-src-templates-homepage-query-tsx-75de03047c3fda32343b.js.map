{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/styles/utils.ts","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","_ref","tags","tagsPath","basePath","useMinimalBlogConfig","React","createElement","Fragment","map","tag","i","key","slug","TLink","as","Link","to","replaceSlashes","name","List","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","visuallyHidden","border","clip","height","overflow","position","whiteSpace","width","Text","props","console","warn","mdx","layoutProps","_frontmatter","MDXContent","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","mt","fontSize","fontWeight","color","className","isMDXComponent","Homepage","posts","blogPath","siteTitle","useSiteMetadata","Layout","p","Hero","Title","text","Listing","showTags","Bottom","HomepageComponent","_extends","_objectDestructuringEmpty","data","allPost","nodes","BlogListItem","post","Box","title","date"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-75de03047c3fda32343b.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","export const visuallyHidden = {\n  // include `px` so we can use it with `sx`\n  border: 0,\n  clip: `rect(0, 0, 0, 0)`,\n  height: `1px`,\n  margin: `-1px`,\n  overflow: `hidden`,\n  padding: 0,\n  position: `absolute`,\n  whiteSpace: `nowrap`,\n  width: `1px`,\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport \"../../../../styles/main.css\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Text sx={{\n      mt: [4, 6],\n      fontSize: [3, 4, 5],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi there. <span className=\"wave\">ðŸ‘‹</span>\n    </Text>\n    <p>{`I'm Andrew. Welcome to my web dev portfolio, where I post my side projects and (occasionally) publish my thoughts on tech-related topics.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List sx={{ variant: `section_bottom` }}>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx, Link as TLink } from \"theme-ui\";\nimport { Box } from \"@theme-ui/components\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}