{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["Tag","_ref","posts","pageContext","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","SEO","title","name","Flex","sx","alignItems","justifyContent","flexFlow","Heading","variant","TLink","as","Link","to","replaceSlashes","Listing","mt","TagComponent","props","_extends","_objectDestructuringEmpty","data","allPost","React","createElement","Object","assign","nodes","ItemTags","tags","Fragment","map","tag","i","key","slug","BlogListItem","post","showTags","Box","mb","fontSize","color","a","date","className"],"mappings":"sPA0DeA,MA3BHC,IAAsC,IAArC,MAAEC,EAAK,YAAEC,GAAuBF,EAC3C,MAAM,SAAEG,EAAQ,SAAEC,GAAaC,cAE/B,OACEC,YAACC,IAAM,KACLD,YAACE,IAAG,CAACC,MAAQ,QAAOP,EAAYQ,OAChCJ,YAACK,IAAI,CACHC,GAAI,CACFC,WAAa,SACbC,eAAiB,gBACjBC,SAAW,SAGbT,YAACU,IAAO,CAACC,QAAQ,aAAaf,EAAYQ,MAC1CJ,YAACY,IAAK,CACJC,GAAIC,OACJR,GAAI,CAAEK,QAAU,mBAChBI,GAAIC,YAAgB,IAAGlB,KAAYD,MACpC,kBAIHG,YAACiB,IAAO,CAACtB,MAAOA,EAAOW,GAAI,CAAEY,GAAI,CAAC,EAAG,QClD5BC,UCcA,SAA2BzB,GAAsB,IAAhB0B,EAAKC,YAAA,IAAAC,YAAA5B,OACnD,MACE6B,MAAM,QAAEC,IACNJ,EAEJ,OAAOK,IAAAC,cAACjC,EAAGkC,OAAAC,OAAA,CAACjC,MAAO6B,EAAQK,OAAWT,M,kCCtBxC,yEA8BeU,IAjBEpC,IAAyB,IAAxB,KAAEqC,GAAiBrC,EACnC,MAAM,SAAEG,EAAQ,SAAEC,GAAaC,cAE/B,OACE0B,IAAAC,cAACD,IAAMO,SAAQ,KACZD,EAAKE,IAAI,CAACC,EAAKC,IACdV,IAAAC,cAACD,IAAMO,SAAQ,CAACI,IAAKF,EAAIG,QACpBF,GAAM,KACTV,IAAAC,cAACd,IAAK,CAACC,GAAIC,OAAMC,GAAIC,YAAgB,IAAGlB,KAAYD,KAAYqC,EAAIG,SACjEH,EAAI9B,W,6GCyBFkC,MAxBM5C,IAAA,IAAC,KAAE6C,EAAI,SAAEC,GAAW,GAAyB9C,EAAA,OAChEM,YAACyC,IAAG,CAACC,GAAI,GACP1C,YAACY,IAAK,CAACC,GAAIC,OAAMC,GAAIwB,EAAKF,KAAM/B,GAAI,CAAEqC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAQ,SAChEL,EAAKpC,OAERH,YAAA,KACEM,GAAI,CACFsC,MAAQ,YACR1B,GAAI,EACJ2B,EAAG,CAAED,MAAQ,aACbD,SAAU,CAAC,EAAG,EAAG,KAGnB3C,YAAA,YAAOuC,EAAKO,MACXP,EAAKR,MAAQS,GACZxC,YAACyB,IAAMO,SAAQ,KACX,MACFhC,YAAC8B,IAAQ,CAACC,KAAMQ,EAAKR,WCXhBd,IARCvB,IAAA,IAAC,MAAEC,EAAK,UAAEoD,EAAa,GAAC,SAAEP,GAAW,GAAoB9C,EAAA,OACvEM,YAAA,WAASM,GAAI,CAAEoC,GAAI,CAAC,EAAG,EAAG,IAAMK,UAAWA,GACxCpD,EAAMsC,IAAKM,GACVvC,YAACsC,EAAY,CAACF,IAAKG,EAAKF,KAAME,KAAMA,EAAMC,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-25ad5d2433828e10dd9f.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from \"theme-ui\";\nimport { Flex } from \"@theme-ui/components\";\nimport { Link } from \"gatsby\";\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\";\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\";\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\";\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\";\nimport SEO from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\";\n\ntype TagProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean;\n    slug: string;\n    name: string;\n    [key: string]: any;\n  };\n};\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <Layout>\n      <SEO title={`Tag: ${pageContext.name}`} />\n      <Flex\n        sx={{\n          alignItems: `center`,\n          justifyContent: `space-between`,\n          flexFlow: `wrap`,\n        }}\n      >\n        <Heading variant=\"styles.h3\">{pageContext.name}</Heading>\n        <TLink\n          as={Link}\n          sx={{ variant: `links.secondary` }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  );\n};\n\nexport default Tag;\n","import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx, Link as TLink } from \"theme-ui\";\nimport { Box } from \"@theme-ui/components\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}